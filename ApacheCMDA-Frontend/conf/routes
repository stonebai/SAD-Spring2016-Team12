# Routes
# This file defines all application routes (Higher priority routes first)
# ~~~~

# Home page
GET         /climatehome                                                controllers.ClimateServiceController.home(email ?= null, vfile ?= null, dataset ?= null)
# GET 		/													 controllers.ClimateServiceController.home(email ?= null, vfile ?= null, dataset ?= null)


# BugReporting
GET         /bugs                                                controllers.BugReportController.reports()
GET         /newReport                                           controllers.BugReportController.newReport()
GET         /bug/list                                            controllers.BugReportController.list()
POST        /delete/report                                       controllers.BugReportController.deleteReport()
POST        /solve/report                                        controllers.BugReportController.solveReport()

# About Us
GET         /aboutus                                             controllers.AboutusController.aboutUs()
GET         /aboutProject                                        controllers.AboutusController.aboutProject()

# Climate Model
GET			/climate											controllers.ClimateServiceController.home(email ?= null, vfile ?= null, dataset ?= null)
GET			/climate/tutorial									controllers.ClimateServiceController.tutorial()
GET			/climate/climateServices							controllers.ClimateServiceController.climateServices()
GET			/climate/mostRecentlyAddedClimateServices			controllers.ClimateServiceController.mostRecentlyAddedClimateServices()
GET			/climate/mostRecentlyUsedClimateServices			controllers.ClimateServiceController.mostRecentlyUsedClimateServices()
GET			/climate/mostPopularClimateServices					controllers.ClimateServiceController.mostPopularClimateServices()
POST		/climate/new/climateServices    					controllers.ClimateServiceController.newClimateService()
POST    	/climate/delete/climateServices   					controllers.ClimateServiceController.deleteClimateService()
POST		/climate/download/climateServices					controllers.ClimateServiceController.downloadClimateService()
POST		/climate/edit/climateServices						controllers.ClimateServiceController.editClimateService()
GET			/climate/new/climateServices						controllers.ClimateServiceController.addClimateServices()
GET			/climate/oneService									controllers.ClimateServiceController.oneService(url ?= null)
#Keyword search
GET 		/climate/datasets									controllers.DatasetController.datasetList()
GET			/climate/searchDataSet 					 			controllers.DatasetController.searchDataset()
GET 		/climate/getSearchResult				 			controllers.DatasetController.getSearchResult()

#Map static resources from the /public folder to the /assets URL path
GET     	/assets/*file               						controllers.Assets.at(path="/public", file)

#Workflow project start here


GET         /                                                   controllers.Application.home()
GET         /home                                               controllers.Application.home()
GET         /login                                              controllers.Application.login()
POST        /login                                              controllers.Application.authenticate()
GET         /index                                              controllers.Application.index()
GET         /logout                                             controllers.Application.logout()
GET         /profile/:id                                        controllers.ProfileController.profile(id: Long)
GET         /signup                                             controllers.SignupController.signUp()
POST        /signup/register                                    controllers.SignupController.register()
GET         /search                                             controllers.SearchController.index()
GET         /searchResult                                       controllers.SearchController.search(category: String ?= "", keywd: String ?= "")
GET         /follow/:id                                         controllers.ProfileController.follow(id: Long)
GET         /unfollow/:id                                       controllers.ProfileController.unfollow(id: Long)
GET         /befriend/:id                                       controllers.ProfileController.sendRequest(id: Long)
GET         /deletefriend/:id                                   controllers.ProfileController.deleteFriend(id: Long)


# display and show work flow
GET         /workflow                                           controllers.WorkflowController.main()
GET         /timeline/:offset                                   controllers.TimelineController.main(offset: Long)
POST        /workflow/new                                       controllers.WorkflowController.createFlow()
GET         /workflow/getPublicWorkflow                         controllers.WorkflowController.getPublicWorkflow()
GET         /workflow/get/:wid                                  controllers.WorkflowController.workflowDetail(wid: Long)
GET         /workflow/update/:wid                               controllers.WorkflowController.edit(wid: Long)
POST        /workflow/edit/:wid                                 controllers.WorkflowController.editFlow(wid: Long)
POST        /workflow/addComment/:wid                           controllers.WorkflowController.addComment(wid: Long)
POST        /workflow/addReply/:toUserId/:commentId/:wid        controllers.WorkflowController.addReply(toUserId: Long, commentId: Long, wid: Long)
GET         /workflow/thumbUp/:commentId/:wid                   controllers.WorkflowController.thumbUp(commentId: Long, wid: Long)
GET         /workflow/thumbDown/:commentId/:wid                 controllers.WorkflowController.thumbDown(commentId: Long, wid: Long)
GET         /workflow/delete/:wid                               controllers.WorkflowController.deleteWorkflow(wid: Long)

GET         /workflow/tags/add/wf/:wid/tag/:tg                  controllers.WorkflowController.addTag(wid: Long, tg: String)
GET         /workflow/tags/delete/wf/:wid/tag/:tg               controllers.WorkflowController.deleteTag(wid: Long, tg: String)
GET         /workflow/import                                    controllers.WorkflowController.parseXML(wid: Long)


# group
GET         /group/create                                       controllers.GroupController.create()
POST        /group/creategroup                                  controllers.GroupController.createGroup()
GET         /group/join                                         controllers.GroupController.join()
POST        /group/joingroup                                    controllers.GroupController.joinGroup()


# notifications
GET         /notifications                                      controllers.NotificationController.main()
GET         /friends/accept/:id                                 controllers.NotificationController.accpetFriend(id: Long)
GET         /friends/reject/:id                                 controllers.NotificationController.rejectFriend(id: Long)
POST        /mail/sendmail                                      controllers.NotificationController.sendMessage()
GET         /mail/detail/:id                                    controllers.NotificationController.pmdetailpage(id: Long)
GET         /notifications/count                                controllers.NotificationController.getNotifications()

# suggestion
POST        /suggestion/addSuggestion/:wid                      controllers.WorkflowController.addSuggestion(wid: Long)
POST        /suggestion/addSuggestionTag/:suggestionID          controllers.WorkflowController.addSuggestionTag(suggestionID: Long)
GET         /suggestion/voteToSuggestion/:suggestionID          controllers.WorkflowController.voteToSuggestion(suggestionID: Long)